const ArbRetryableTxABI = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'Canceled',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'newTimeout',
    type: 'uint256'
  }],
  name: 'LifetimeExtended',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'Redeemed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'TicketCreated',
  type: 'event'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'cancel',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'getBeneficiary',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'getKeepalivePrice',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'getLifetime',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: 'calldataSize',
    type: 'uint256'
  }],
  name: 'getSubmissionPrice',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'getTimeout',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'ticketId',
    type: 'bytes32'
  }],
  name: 'keepalive',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'txId',
    type: 'bytes32'
  }],
  name: 'redeem',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}];

const InboxABI = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'uint256',
    name: 'messageNum',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'InboxMessageDelivered',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'uint256',
    name: 'messageNum',
    type: 'uint256'
  }],
  name: 'InboxMessageDeliveredFromOrigin',
  type: 'event'
}, {
  inputs: [],
  name: 'bridge',
  outputs: [{
    internalType: 'contract IBridge',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: 'dataLength',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'baseFee',
    type: 'uint256'
  }],
  name: 'calculateRetryableSubmissionFee',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'pure',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: 'to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'l2CallValue',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'maxSubmissionCost',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'excessFeeRefundAddress',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'callValueRefundAddress',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'gasLimit',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'maxFeePerGas',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'createRetryableTicket',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: 'destAddr',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'l2CallValue',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'maxSubmissionCost',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'excessFeeRefundAddress',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'callValueRefundAddress',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'createRetryableTicketNoRefundAliasRewrite',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: 'destAddr',
    type: 'address'
  }],
  name: 'depositEth',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: 'destAddr',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'maxSubmissionCost',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'maxGasPrice',
    type: 'uint256'
  }],
  name: 'depositEthRetryable',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'contract IBridge',
    name: '_bridge',
    type: 'address'
  }],
  name: 'initialize',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  name: 'isMaster',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: 'maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'destAddr',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'sendContractTransaction',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: 'maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'destAddr',
    type: 'address'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'sendL1FundedContractTransaction',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: 'maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'nonce',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'destAddr',
    type: 'address'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'sendL1FundedUnsignedTransaction',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes',
    name: 'messageData',
    type: 'bytes'
  }],
  name: 'sendL2Message',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes',
    name: 'messageData',
    type: 'bytes'
  }],
  name: 'sendL2MessageFromOrigin',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: 'maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'nonce',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'destAddr',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'sendUnsignedTransaction',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'nonpayable',
  type: 'function'
}];

const L1BondingManagerABI = [{
  constant: true,
  inputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  name: 'activeTranscoderSetDEPRECATED',
  outputs: [{
    internalType: 'uint256',
    name: 'totalStake',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'maxEarningsClaimsRounds',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'numActiveTranscodersDEPRECATED',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'currentRoundTotalActiveStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'nextRoundTotalActiveStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'targetContractId',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'unbondingPeriod',
  outputs: [{
    internalType: 'uint64',
    name: '',
    type: 'uint64'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  name: 'setController',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'controller',
  outputs: [{
    internalType: 'contract IController',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'rewardCut',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'feeShare',
    type: 'uint256'
  }],
  name: 'TranscoderUpdate',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'activationRound',
    type: 'uint256'
  }],
  name: 'TranscoderActivated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'deactivationRound',
    type: 'uint256'
  }],
  name: 'TranscoderDeactivated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'address',
    name: 'finder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'penalty',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'finderReward',
    type: 'uint256'
  }],
  name: 'TranscoderSlashed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'Reward',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'newDelegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'oldDelegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'additionalAmount',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'bondedAmount',
    type: 'uint256'
  }],
  name: 'Bond',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'unbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'withdrawRound',
    type: 'uint256'
  }],
  name: 'Unbond',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'unbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'Rebond',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'unbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'withdrawRound',
    type: 'uint256'
  }],
  name: 'WithdrawStake',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }],
  name: 'WithdrawFees',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'rewards',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'fees',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'startRound',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'endRound',
    type: 'uint256'
  }],
  name: 'EarningsClaimed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'controller',
    type: 'address'
  }],
  name: 'SetController',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'string',
    name: 'param',
    type: 'string'
  }],
  name: 'ParameterUpdate',
  type: 'event'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint64',
    name: '_unbondingPeriod',
    type: 'uint64'
  }],
  name: 'setUnbondingPeriod',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_numActiveTranscoders',
    type: 'uint256'
  }],
  name: 'setNumActiveTranscoders',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_maxEarningsClaimsRounds',
    type: 'uint256'
  }],
  name: 'setMaxEarningsClaimsRounds',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_bondedAmount',
    type: 'uint256'
  }],
  name: 'executeLIP77',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_rewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_feeShare',
    type: 'uint256'
  }],
  name: 'transcoder',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_to',
    type: 'address'
  }],
  name: 'bond',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'unbond',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'rebond',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'rebondFromUnbonded',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'withdrawStake',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'withdrawFees',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'reward',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_fees',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_round',
    type: 'uint256'
  }],
  name: 'updateTranscoderWithFees',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_finder',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_slashAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_finderFee',
    type: 'uint256'
  }],
  name: 'slashTranscoder',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_endRound',
    type: 'uint256'
  }],
  name: 'claimEarnings',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_pendingStake',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_pendingFees',
    type: 'uint256'
  }, {
    internalType: 'bytes32[]',
    name: '_earningsProof',
    type: 'bytes32[]'
  }, {
    internalType: 'bytes',
    name: '_data',
    type: 'bytes'
  }],
  name: 'claimSnapshotEarnings',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'setCurrentRoundTotalActiveStake',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_rewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_feeShare',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'transcoderWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosNext',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_currDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_currDelegateNewPosNext',
    type: 'address'
  }],
  name: 'bondWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'unbondWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'rebondWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'rebondFromUnbondedWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'rewardWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_endRound',
    type: 'uint256'
  }],
  name: 'pendingStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_endRound',
    type: 'uint256'
  }],
  name: 'pendingFees',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'transcoderTotalStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'transcoderStatus',
  outputs: [{
    internalType: 'enum BondingManager.TranscoderStatus',
    name: '',
    type: 'uint8'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }],
  name: 'delegatorStatus',
  outputs: [{
    internalType: 'enum BondingManager.DelegatorStatus',
    name: '',
    type: 'uint8'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'getTranscoder',
  outputs: [{
    internalType: 'uint256',
    name: 'lastRewardRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'rewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'feeShare',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'lastActiveStakeUpdateRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'activationRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'deactivationRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'activeCumulativeRewards',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'cumulativeRewards',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'cumulativeFees',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'lastFeeRound',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_round',
    type: 'uint256'
  }],
  name: 'getTranscoderEarningsPoolForRound',
  outputs: [{
    internalType: 'uint256',
    name: 'rewardPool',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'feePool',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'totalStake',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'claimableStake',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'transcoderRewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'transcoderFeeShare',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'transcoderRewardPool',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'transcoderFeePool',
    type: 'uint256'
  }, {
    internalType: 'bool',
    name: 'hasTranscoderRewardFeePool',
    type: 'bool'
  }, {
    internalType: 'uint256',
    name: 'cumulativeRewardFactor',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'cumulativeFeeFactor',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }],
  name: 'getDelegator',
  outputs: [{
    internalType: 'uint256',
    name: 'bondedAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'fees',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'delegateAddress',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'delegatedAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'startRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'lastClaimRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'nextUnbondingLockId',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'getDelegatorUnbondingLock',
  outputs: [{
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'withdrawRound',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getTranscoderPoolMaxSize',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getTranscoderPoolSize',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getFirstTranscoderInPool',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'getNextTranscoderInPool',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getTotalBonded',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'isActiveTranscoder',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'isRegisteredTranscoder',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'isValidUnbondingLock',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}];

const L1MigratorABI = [{
  inputs: [{
    internalType: 'address',
    name: '_inbox',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_bondingManagerAddr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_ticketBrokerAddr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2MigratorAddr',
    type: 'address'
  }],
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'uint256',
    name: 'seqNo',
    type: 'uint256'
  }, {
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'stake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'delegatedStake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'fees',
      type: 'uint256'
    }, {
      internalType: 'address',
      name: 'delegate',
      type: 'address'
    }],
    indexed: false,
    internalType: 'struct IMigrator.MigrateDelegatorParams',
    name: 'params',
    type: 'tuple'
  }],
  name: 'MigrateDelegatorInitiated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'uint256',
    name: 'seqNo',
    type: 'uint256'
  }, {
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'deposit',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'reserve',
      type: 'uint256'
    }],
    indexed: false,
    internalType: 'struct IMigrator.MigrateSenderParams',
    name: 'params',
    type: 'tuple'
  }],
  name: 'MigrateSenderInitiated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'uint256',
    name: 'seqNo',
    type: 'uint256'
  }, {
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'total',
      type: 'uint256'
    }, {
      internalType: 'uint256[]',
      name: 'unbondingLockIds',
      type: 'uint256[]'
    }],
    indexed: false,
    internalType: 'struct IMigrator.MigrateUnbondingLocksParams',
    name: 'params',
    type: 'tuple'
  }],
  name: 'MigrateUnbondingLocksInitiated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'from',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'to',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'uint256',
    name: 'seqNum',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'TxToL2',
  type: 'event'
}, {
  inputs: [],
  name: 'bondingManagerAddr',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Addr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2Addr',
    type: 'address'
  }],
  name: 'getMigrateDelegatorParams',
  outputs: [{
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }, {
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'stake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'delegatedStake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'fees',
      type: 'uint256'
    }, {
      internalType: 'address',
      name: 'delegate',
      type: 'address'
    }],
    internalType: 'struct IMigrator.MigrateDelegatorParams',
    name: 'params',
    type: 'tuple'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Addr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2Addr',
    type: 'address'
  }],
  name: 'getMigrateSenderParams',
  outputs: [{
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }, {
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'deposit',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'reserve',
      type: 'uint256'
    }],
    internalType: 'struct IMigrator.MigrateSenderParams',
    name: 'params',
    type: 'tuple'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Addr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2Addr',
    type: 'address'
  }, {
    internalType: 'uint256[]',
    name: '_unbondingLockIds',
    type: 'uint256[]'
  }],
  name: 'getMigrateUnbondingLocksParams',
  outputs: [{
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }, {
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'total',
      type: 'uint256'
    }, {
      internalType: 'uint256[]',
      name: 'unbondingLockIds',
      type: 'uint256[]'
    }],
    internalType: 'struct IMigrator.MigrateUnbondingLocksParams',
    name: 'params',
    type: 'tuple'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'inbox',
  outputs: [{
    internalType: 'contract IInbox',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'l2MigratorAddr',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Addr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2Addr',
    type: 'address'
  }, {
    internalType: 'bytes',
    name: '_sig',
    type: 'bytes'
  }, {
    internalType: 'uint256',
    name: '_maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_maxSubmissionCost',
    type: 'uint256'
  }],
  name: 'migrateDelegator',
  outputs: [],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Addr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2Addr',
    type: 'address'
  }, {
    internalType: 'bytes',
    name: '_sig',
    type: 'bytes'
  }, {
    internalType: 'uint256',
    name: '_maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_maxSubmissionCost',
    type: 'uint256'
  }],
  name: 'migrateSender',
  outputs: [],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Addr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2Addr',
    type: 'address'
  }, {
    internalType: 'uint256[]',
    name: '_unbondingLockIds',
    type: 'uint256[]'
  }, {
    internalType: 'bytes',
    name: '_sig',
    type: 'bytes'
  }, {
    internalType: 'uint256',
    name: '_maxGas',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_gasPriceBid',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_maxSubmissionCost',
    type: 'uint256'
  }],
  name: 'migrateUnbondingLocks',
  outputs: [],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [],
  name: 'ticketBrokerAddr',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}];

const L2LPTGatewayABI = [{
  inputs: [{
    internalType: 'address',
    name: '_l2Router',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l1Lpt',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_l2Lpt',
    type: 'address'
  }],
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: '_l1Token',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: '_from',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'DepositFinalized',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'Paused',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'bytes32',
    name: 'previousAdminRole',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'bytes32',
    name: 'newAdminRole',
    type: 'bytes32'
  }],
  name: 'RoleAdminChanged',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'account',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }],
  name: 'RoleGranted',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'account',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }],
  name: 'RoleRevoked',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: '_from',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'uint256',
    name: '_id',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'bytes',
    name: '_data',
    type: 'bytes'
  }],
  name: 'TxToL1',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'Unpaused',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: '_l1Token',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: '_from',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'uint256',
    name: '_l2ToL1Id',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: '_exitNum',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'WithdrawalInitiated',
  type: 'event'
}, {
  inputs: [],
  name: 'DEFAULT_ADMIN_ROLE',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'GOVERNOR_ROLE',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: 'l1Token',
    type: 'address'
  }],
  name: 'calculateL2TokenAddress',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'counterpartGateway',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Token',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_from',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: '',
    type: 'bytes'
  }],
  name: 'finalizeInboundTransfer',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: 'token',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'from',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'getOutboundCalldata',
  outputs: [{
    internalType: 'bytes',
    name: 'outboundCalldata',
    type: 'bytes'
  }],
  stateMutability: 'pure',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }],
  name: 'getRoleAdmin',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'grantRole',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'hasRole',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'l1Counterpart',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'l1Lpt',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'l2Lpt',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'l2Router',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Token',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: '_data',
    type: 'bytes'
  }],
  name: 'outboundTransfer',
  outputs: [{
    internalType: 'bytes',
    name: 'res',
    type: 'bytes'
  }],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  name: 'pause',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  name: 'paused',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'renounceRole',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'revokeRole',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Counterpart',
    type: 'address'
  }],
  name: 'setCounterpart',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes4',
    name: 'interfaceId',
    type: 'bytes4'
  }],
  name: 'supportsInterface',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'unpause',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}];

const L2MigratorABI = [{
  inputs: [{
    internalType: 'address',
    name: '_l1Migrator',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_delegatorPoolImpl',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_bondingManagerAddr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_ticketBrokerAddr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_merkleSnapshotAddr',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_tokenAddr',
    type: 'address'
  }],
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'l1Addr',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'address',
    name: 'delegatorPool',
    type: 'address'
  }],
  name: 'DelegatorPoolCreated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'stake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'delegatedStake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'fees',
      type: 'uint256'
    }, {
      internalType: 'address',
      name: 'delegate',
      type: 'address'
    }],
    indexed: false,
    internalType: 'struct IMigrator.MigrateDelegatorParams',
    name: 'params',
    type: 'tuple'
  }],
  name: 'MigrateDelegatorFinalized',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'deposit',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'reserve',
      type: 'uint256'
    }],
    indexed: false,
    internalType: 'struct IMigrator.MigrateSenderParams',
    name: 'params',
    type: 'tuple'
  }],
  name: 'MigrateSenderFinalized',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'total',
      type: 'uint256'
    }, {
      internalType: 'uint256[]',
      name: 'unbondingLockIds',
      type: 'uint256[]'
    }, {
      internalType: 'address',
      name: 'delegate',
      type: 'address'
    }],
    indexed: false,
    internalType: 'struct IMigrator.MigrateUnbondingLocksParams',
    name: 'params',
    type: 'tuple'
  }],
  name: 'MigrateUnbondingLocksFinalized',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'bytes32',
    name: 'previousAdminRole',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'bytes32',
    name: 'newAdminRole',
    type: 'bytes32'
  }],
  name: 'RoleAdminChanged',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'account',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }],
  name: 'RoleGranted',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'account',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }],
  name: 'RoleRevoked',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'address',
    name: 'delegate',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'stake',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'fees',
    type: 'uint256'
  }],
  name: 'StakeClaimed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: '_from',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'uint256',
    name: '_id',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'bytes',
    name: '_data',
    type: 'bytes'
  }],
  name: 'TxToL1',
  type: 'event'
}, {
  inputs: [],
  name: 'DEFAULT_ADMIN_ROLE',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'GOVERNOR_ROLE',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'bondingManagerAddr',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_delegate',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_stake',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_fees',
    type: 'uint256'
  }, {
    internalType: 'bytes32[]',
    name: '_proof',
    type: 'bytes32[]'
  }, {
    internalType: 'address',
    name: '_newDelegate',
    type: 'address'
  }],
  name: 'claimStake',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  name: 'claimStakeEnabled',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  name: 'claimedDelegatedStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'delegatorPoolImpl',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  name: 'delegatorPools',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'stake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'delegatedStake',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'fees',
      type: 'uint256'
    }, {
      internalType: 'address',
      name: 'delegate',
      type: 'address'
    }],
    internalType: 'struct IMigrator.MigrateDelegatorParams',
    name: '_params',
    type: 'tuple'
  }],
  name: 'finalizeMigrateDelegator',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'deposit',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'reserve',
      type: 'uint256'
    }],
    internalType: 'struct IMigrator.MigrateSenderParams',
    name: '_params',
    type: 'tuple'
  }],
  name: 'finalizeMigrateSender',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'l1Addr',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'l2Addr',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'total',
      type: 'uint256'
    }, {
      internalType: 'uint256[]',
      name: 'unbondingLockIds',
      type: 'uint256[]'
    }, {
      internalType: 'address',
      name: 'delegate',
      type: 'address'
    }],
    internalType: 'struct IMigrator.MigrateUnbondingLocksParams',
    name: '_params',
    type: 'tuple'
  }],
  name: 'finalizeMigrateUnbondingLocks',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }],
  name: 'getRoleAdmin',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'grantRole',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'hasRole',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'l1Migrator',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'merkleSnapshotAddr',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  name: 'migratedDelegators',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  name: 'migratedSenders',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  name: 'migratedUnbondingLocks',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'renounceRole',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes32',
    name: 'role',
    type: 'bytes32'
  }, {
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'revokeRole',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bool',
    name: '_enabled',
    type: 'bool'
  }],
  name: 'setClaimStakeEnabled',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_delegatorPoolImpl',
    type: 'address'
  }],
  name: 'setDelegatorPoolImpl',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_l1Migrator',
    type: 'address'
  }],
  name: 'setL1Migrator',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'bytes4',
    name: 'interfaceId',
    type: 'bytes4'
  }],
  name: 'supportsInterface',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'ticketBrokerAddr',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'tokenAddr',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  stateMutability: 'payable',
  type: 'receive'
}];

const NodeInterfaceABI = [{
  inputs: [{
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'deposit',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'l2CallValue',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'excessFeeRefundAddress',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'callValueRefundAddress',
    type: 'address'
  }, {
    internalType: 'bytes',
    name: 'data',
    type: 'bytes'
  }],
  name: 'estimateRetryableTicket',
  outputs: [],
  stateMutability: 'pure',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: 'batchNum',
    type: 'uint256'
  }, {
    internalType: 'uint64',
    name: 'index',
    type: 'uint64'
  }],
  name: 'lookupMessageBatchProof',
  outputs: [{
    internalType: 'bytes32[]',
    name: 'proof',
    type: 'bytes32[]'
  }, {
    internalType: 'uint256',
    name: 'path',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'l2Sender',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'l1Dest',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'l2Block',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'l1Block',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'timestamp',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    internalType: 'bytes',
    name: 'calldataForL1',
    type: 'bytes'
  }],
  stateMutability: 'view',
  type: 'function'
}];

const BondingManagerABI = [{
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'rebondFromUnbondedWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosNext',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newDelegateNewPosNext',
    type: 'address'
  }],
  name: 'transferBond',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'isActiveTranscoder',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'isValidUnbondingLock',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }],
  name: 'delegatorStatus',
  outputs: [{
    internalType: 'enum BondingManager.DelegatorStatus',
    name: '',
    type: 'uint8'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'reward',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_finder',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_slashAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_finderFee',
    type: 'uint256'
  }],
  name: 'slashTranscoder',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'getNextTranscoderInPool',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_round',
    type: 'uint256'
  }],
  name: 'getTranscoderEarningsPoolForRound',
  outputs: [{
    internalType: 'uint256',
    name: 'totalStake',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'transcoderRewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'transcoderFeeShare',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'cumulativeRewardFactor',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'cumulativeFeeFactor',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_endRound',
    type: 'uint256'
  }],
  name: 'claimEarnings',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'withdrawStake',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'unbond',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getTranscoderPoolSize',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_rewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_feeShare',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'transcoderWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'rebondFromUnbonded',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_fees',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_round',
    type: 'uint256'
  }],
  name: 'updateTranscoderWithFees',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'getDelegatorUnbondingLock',
  outputs: [{
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'withdrawRound',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'currentRoundTotalActiveStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_rewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_feeShare',
    type: 'uint256'
  }],
  name: 'transcoder',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'nextRoundTotalActiveStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'targetContractId',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getTranscoderPoolMaxSize',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getTotalBonded',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'getTranscoder',
  outputs: [{
    internalType: 'uint256',
    name: 'lastRewardRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'rewardCut',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'feeShare',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'lastActiveStakeUpdateRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'activationRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'deactivationRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'activeCumulativeRewards',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'cumulativeRewards',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'cumulativeFees',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'lastFeeRound',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_numActiveTranscoders',
    type: 'uint256'
  }],
  name: 'setNumActiveTranscoders',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'isRegisteredTranscoder',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosNext',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_currDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_currDelegateNewPosNext',
    type: 'address'
  }],
  name: 'bondWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'unbondingPeriod',
  outputs: [{
    internalType: 'uint64',
    name: '',
    type: 'uint64'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'setCurrentRoundTotalActiveStake',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'rebondWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'rewardWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'getFirstTranscoderInPool',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'transcoderStatus',
  outputs: [{
    internalType: 'enum BondingManager.TranscoderStatus',
    name: '',
    type: 'uint8'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  name: 'setController',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_newPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_newPosNext',
    type: 'address'
  }],
  name: 'unbondWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_endRound',
    type: 'uint256'
  }],
  name: 'pendingStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_transcoder',
    type: 'address'
  }],
  name: 'transcoderTotalStake',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }],
  name: 'getDelegator',
  outputs: [{
    internalType: 'uint256',
    name: 'bondedAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'fees',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: 'delegateAddress',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'delegatedAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'startRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'lastClaimRound',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: 'nextUnbondingLockId',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address payable',
    name: '_recipient',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'withdrawFees',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_to',
    type: 'address'
  }],
  name: 'bond',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_unbondingLockId',
    type: 'uint256'
  }],
  name: 'rebond',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }, {
    internalType: 'address',
    name: '_owner',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_oldDelegateNewPosNext',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_currDelegateNewPosPrev',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_currDelegateNewPosNext',
    type: 'address'
  }],
  name: 'bondForWithHint',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint64',
    name: '_unbondingPeriod',
    type: 'uint64'
  }],
  name: 'setUnbondingPeriod',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_delegator',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_endRound',
    type: 'uint256'
  }],
  name: 'pendingFees',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'controller',
  outputs: [{
    internalType: 'contract IController',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'rewardCut',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'feeShare',
    type: 'uint256'
  }],
  name: 'TranscoderUpdate',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'activationRound',
    type: 'uint256'
  }],
  name: 'TranscoderActivated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'deactivationRound',
    type: 'uint256'
  }],
  name: 'TranscoderDeactivated',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'address',
    name: 'finder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'penalty',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'finderReward',
    type: 'uint256'
  }],
  name: 'TranscoderSlashed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'transcoder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'Reward',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'newDelegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'oldDelegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'additionalAmount',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'bondedAmount',
    type: 'uint256'
  }],
  name: 'Bond',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'unbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'withdrawRound',
    type: 'uint256'
  }],
  name: 'Unbond',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'unbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'Rebond',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'oldDelegator',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'newDelegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'oldUnbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'newUnbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'TransferBond',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'unbondingLockId',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'withdrawRound',
    type: 'uint256'
  }],
  name: 'WithdrawStake',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'address',
    name: 'recipient',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'WithdrawFees',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'delegate',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'delegator',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'rewards',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'fees',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'startRound',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'endRound',
    type: 'uint256'
  }],
  name: 'EarningsClaimed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'controller',
    type: 'address'
  }],
  name: 'SetController',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'string',
    name: 'param',
    type: 'string'
  }],
  name: 'ParameterUpdate',
  type: 'event'
}];

const ControllerABI = [{
  constant: false,
  inputs: [],
  name: 'unpause',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'paused',
  outputs: [{
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    name: '_id',
    type: 'bytes32'
  }],
  name: 'getContractInfo',
  outputs: [{
    name: '',
    type: 'address'
  }, {
    name: '',
    type: 'bytes20'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'pause',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'owner',
  outputs: [{
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    name: '_id',
    type: 'bytes32'
  }, {
    name: '_contractAddress',
    type: 'address'
  }, {
    name: '_gitCommitHash',
    type: 'bytes20'
  }],
  name: 'setContractInfo',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    name: '_id',
    type: 'bytes32'
  }],
  name: 'getContract',
  outputs: [{
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    name: '_id',
    type: 'bytes32'
  }, {
    name: '_controller',
    type: 'address'
  }],
  name: 'updateController',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    name: 'newOwner',
    type: 'address'
  }],
  name: 'transferOwnership',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    name: 'id',
    type: 'bytes32'
  }, {
    indexed: false,
    name: 'contractAddress',
    type: 'address'
  }, {
    indexed: false,
    name: 'gitCommitHash',
    type: 'bytes20'
  }],
  name: 'SetContractInfo',
  type: 'event'
}, {
  anonymous: false,
  inputs: [],
  name: 'Pause',
  type: 'event'
}, {
  anonymous: false,
  inputs: [],
  name: 'Unpause',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    name: 'previousOwner',
    type: 'address'
  }, {
    indexed: true,
    name: 'newOwner',
    type: 'address'
  }],
  name: 'OwnershipTransferred',
  type: 'event'
}];

const LivepeerTokenABI = [{
  constant: true,
  inputs: [],
  name: 'mintingFinished',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'name',
  outputs: [{
    internalType: 'string',
    name: '',
    type: 'string'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: 'spender',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'value',
    type: 'uint256'
  }],
  name: 'approve',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'totalSupply',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'recipient',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'transferFrom',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'decimals',
  outputs: [{
    internalType: 'uint8',
    name: '',
    type: 'uint8'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: 'spender',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'addedValue',
    type: 'uint256'
  }],
  name: 'increaseAllowance',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'mint',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'burn',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'version',
  outputs: [{
    internalType: 'string',
    name: '',
    type: 'string'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: 'account',
    type: 'address'
  }],
  name: 'balanceOf',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'finishMinting',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'owner',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'symbol',
  outputs: [{
    internalType: 'string',
    name: '',
    type: 'string'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: 'spender',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'subtractedValue',
    type: 'uint256'
  }],
  name: 'decreaseAllowance',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: 'recipient',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'transfer',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: 'owner',
    type: 'address'
  }, {
    internalType: 'address',
    name: 'spender',
    type: 'address'
  }],
  name: 'allowance',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: 'newOwner',
    type: 'address'
  }],
  name: 'transferOwnership',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'burner',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'value',
    type: 'uint256'
  }],
  name: 'Burn',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'to',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'Mint',
  type: 'event'
}, {
  anonymous: false,
  inputs: [],
  name: 'MintFinished',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'previousOwner',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'newOwner',
    type: 'address'
  }],
  name: 'OwnershipTransferred',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'from',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'to',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'value',
    type: 'uint256'
  }],
  name: 'Transfer',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'owner',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'spender',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'value',
    type: 'uint256'
  }],
  name: 'Approval',
  type: 'event'
}];

const LivepeerTokenFaucetABI = [{
  constant: true,
  inputs: [],
  name: 'requestWait',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  name: 'nextValidRequest',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  name: 'isWhitelisted',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'owner',
  outputs: [{
    internalType: 'address',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: 'newOwner',
    type: 'address'
  }],
  name: 'transferOwnership',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'requestAmount',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'token',
  outputs: [{
    internalType: 'contract ILivepeerToken',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_token',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_requestAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_requestWait',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'to',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'Request',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'previousOwner',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'newOwner',
    type: 'address'
  }],
  name: 'OwnershipTransferred',
  type: 'event'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_addr',
    type: 'address'
  }],
  name: 'addToWhitelist',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_addr',
    type: 'address'
  }],
  name: 'removeFromWhitelist',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'request',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}];

const MerkleSnapshotABI = [{
  constant: true,
  inputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  name: 'snapshot',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  name: 'setController',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'controller',
  outputs: [{
    internalType: 'contract IController',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'controller',
    type: 'address'
  }],
  name: 'SetController',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'string',
    name: 'param',
    type: 'string'
  }],
  name: 'ParameterUpdate',
  type: 'event'
}, {
  constant: false,
  inputs: [{
    internalType: 'bytes32',
    name: '_id',
    type: 'bytes32'
  }, {
    internalType: 'bytes32',
    name: '_root',
    type: 'bytes32'
  }],
  name: 'setSnapshot',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'bytes32',
    name: '_id',
    type: 'bytes32'
  }, {
    internalType: 'bytes32[]',
    name: '_proof',
    type: 'bytes32[]'
  }, {
    internalType: 'bytes32',
    name: '_leaf',
    type: 'bytes32'
  }],
  name: 'verify',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}];

const MinterABI = [{
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_inflation',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_inflationChange',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_targetBondingRate',
    type: 'uint256'
  }],
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'string',
    name: 'param',
    type: 'string'
  }],
  name: 'ParameterUpdate',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'controller',
    type: 'address'
  }],
  name: 'SetController',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'uint256',
    name: 'currentMintableTokens',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'currentInflation',
    type: 'uint256'
  }],
  name: 'SetCurrentRewardTokens',
  type: 'event'
}, {
  inputs: [],
  name: 'controller',
  outputs: [{
    internalType: 'contract IController',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: '_fracNum',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_fracDenom',
    type: 'uint256'
  }],
  name: 'createReward',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  name: 'currentMintableTokens',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'currentMintedTokens',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'depositETH',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  stateMutability: 'payable',
  type: 'function'
}, {
  inputs: [],
  name: 'getController',
  outputs: [{
    internalType: 'contract IController',
    name: '',
    type: 'address'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'getGlobalTotalSupply',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'inflation',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [],
  name: 'inflationChange',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'contract IMinter',
    name: '_newMinter',
    type: 'address'
  }],
  name: 'migrateToNewMinter',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  name: 'setController',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  name: 'setCurrentRewardTokens',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: '_inflationChange',
    type: 'uint256'
  }],
  name: 'setInflationChange',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: '_targetBondingRate',
    type: 'uint256'
  }],
  name: 'setTargetBondingRate',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [],
  name: 'targetBondingRate',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'trustedBurnTokens',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'trustedTransferTokens',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address payable',
    name: '_to',
    type: 'address'
  }, {
    internalType: 'uint256',
    name: '_amount',
    type: 'uint256'
  }],
  name: 'trustedWithdrawETH',
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
}];

const PollABI = [{
  constant: true,
  inputs: [],
  name: 'endBlock',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'uint256',
    name: '_endBlock',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'voter',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'choiceID',
    type: 'uint256'
  }],
  name: 'Vote',
  type: 'event'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_choiceID',
    type: 'uint256'
  }],
  name: 'vote',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'destroy',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}];

const PollCreatorABI = [{
  constant: true,
  inputs: [],
  name: 'QUORUM',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'bytes',
    name: '_proposal',
    type: 'bytes'
  }],
  name: 'createPoll',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'POLL_CREATION_COST',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'QUOTA',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'POLL_PERIOD',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'token',
  outputs: [{
    internalType: 'contract ILivepeerToken',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_tokenAddr',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'poll',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'bytes',
    name: 'proposal',
    type: 'bytes'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'endBlock',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'quorum',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'quota',
    type: 'uint256'
  }],
  name: 'PollCreated',
  type: 'event'
}];

const RoundsManagerABI = [{
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_roundLockAmount',
    type: 'uint256'
  }],
  name: 'setRoundLockAmount',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'lastRoundLengthUpdateRound',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'currentRoundInitialized',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'uint256',
    name: '_round',
    type: 'uint256'
  }],
  name: 'blockHashForRound',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'targetContractId',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'lastRoundLengthUpdateStartBlock',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_roundLength',
    type: 'uint256'
  }],
  name: 'setRoundLength',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'currentRoundLocked',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'uint256',
    name: '_block',
    type: 'uint256'
  }],
  name: 'blockHash',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'lastInitializedRound',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'currentRound',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'blockNum',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'roundLength',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'currentRoundStartBlock',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  name: 'setController',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'initializeRound',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'roundLockAmount',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'controller',
  outputs: [{
    internalType: 'contract IController',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'uint256',
    name: 'round',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'bytes32',
    name: 'blockHash',
    type: 'bytes32'
  }],
  name: 'NewRound',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'controller',
    type: 'address'
  }],
  name: 'SetController',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'string',
    name: 'param',
    type: 'string'
  }],
  name: 'ParameterUpdate',
  type: 'event'
}];

const ServiceRegistryABI = [{
  constant: true,
  inputs: [{
    name: '_addr',
    type: 'address'
  }],
  name: 'getServiceURI',
  outputs: [{
    name: '',
    type: 'string'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'targetContractId',
  outputs: [{
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    name: '_serviceURI',
    type: 'string'
  }],
  name: 'setServiceURI',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    name: '_controller',
    type: 'address'
  }],
  name: 'setController',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'controller',
  outputs: [{
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    name: '_controller',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    name: 'addr',
    type: 'address'
  }, {
    indexed: false,
    name: 'serviceURI',
    type: 'string'
  }],
  name: 'ServiceURIUpdate',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    name: 'controller',
    type: 'address'
  }],
  name: 'SetController',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    name: 'param',
    type: 'string'
  }],
  name: 'ParameterUpdate',
  type: 'event'
}];

const TicketBrokerABI = [{
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_sender',
    type: 'address'
  }],
  name: 'isUnlockInProgress',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'unlockPeriod',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'withdraw',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_unlockPeriod',
    type: 'uint256'
  }],
  name: 'setUnlockPeriod',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_reserveHolder',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_claimant',
    type: 'address'
  }],
  name: 'claimedReserve',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_depositAmount',
    type: 'uint256'
  }, {
    internalType: 'uint256',
    name: '_reserveAmount',
    type: 'uint256'
  }],
  name: 'fundDepositAndReserve',
  outputs: [],
  payable: true,
  stateMutability: 'payable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'targetContractId',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  name: 'usedTickets',
  outputs: [{
    internalType: 'bool',
    name: '',
    type: 'bool'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_reserveHolder',
    type: 'address'
  }],
  name: 'getReserveInfo',
  outputs: [{
    components: [{
      internalType: 'uint256',
      name: 'fundsRemaining',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'claimedInCurrentRound',
      type: 'uint256'
    }],
    internalType: 'struct MReserve.ReserveInfo',
    name: 'info',
    type: 'tuple'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'fundDeposit',
  outputs: [],
  payable: true,
  stateMutability: 'payable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'fundReserve',
  outputs: [],
  payable: true,
  stateMutability: 'payable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_reserveHolder',
    type: 'address'
  }, {
    internalType: 'address',
    name: '_claimant',
    type: 'address'
  }],
  name: 'claimableReserve',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'ticketValidityPeriod',
  outputs: [{
    internalType: 'uint256',
    name: '',
    type: 'uint256'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  name: 'setController',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'unlock',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'recipient',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'sender',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'faceValue',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'winProb',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'senderNonce',
      type: 'uint256'
    }, {
      internalType: 'bytes32',
      name: 'recipientRandHash',
      type: 'bytes32'
    }, {
      internalType: 'bytes',
      name: 'auxData',
      type: 'bytes'
    }],
    internalType: 'struct MTicketBrokerCore.Ticket',
    name: '_ticket',
    type: 'tuple'
  }],
  name: 'getTicketHash',
  outputs: [{
    internalType: 'bytes32',
    name: '',
    type: 'bytes32'
  }],
  payable: false,
  stateMutability: 'pure',
  type: 'function'
}, {
  constant: false,
  inputs: [],
  name: 'cancelUnlock',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    internalType: 'uint256',
    name: '_ticketValidityPeriod',
    type: 'uint256'
  }],
  name: 'setTicketValidityPeriod',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'recipient',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'sender',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'faceValue',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'winProb',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'senderNonce',
      type: 'uint256'
    }, {
      internalType: 'bytes32',
      name: 'recipientRandHash',
      type: 'bytes32'
    }, {
      internalType: 'bytes',
      name: 'auxData',
      type: 'bytes'
    }],
    internalType: 'struct MTicketBrokerCore.Ticket[]',
    name: '_tickets',
    type: 'tuple[]'
  }, {
    internalType: 'bytes[]',
    name: '_sigs',
    type: 'bytes[]'
  }, {
    internalType: 'uint256[]',
    name: '_recipientRands',
    type: 'uint256[]'
  }],
  name: 'batchRedeemWinningTickets',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [{
    internalType: 'address',
    name: '_sender',
    type: 'address'
  }],
  name: 'getSenderInfo',
  outputs: [{
    components: [{
      internalType: 'uint256',
      name: 'deposit',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'withdrawRound',
      type: 'uint256'
    }],
    internalType: 'struct MixinTicketBrokerCore.Sender',
    name: 'sender',
    type: 'tuple'
  }, {
    components: [{
      internalType: 'uint256',
      name: 'fundsRemaining',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'claimedInCurrentRound',
      type: 'uint256'
    }],
    internalType: 'struct MReserve.ReserveInfo',
    name: 'reserve',
    type: 'tuple'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  constant: false,
  inputs: [{
    components: [{
      internalType: 'address',
      name: 'recipient',
      type: 'address'
    }, {
      internalType: 'address',
      name: 'sender',
      type: 'address'
    }, {
      internalType: 'uint256',
      name: 'faceValue',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'winProb',
      type: 'uint256'
    }, {
      internalType: 'uint256',
      name: 'senderNonce',
      type: 'uint256'
    }, {
      internalType: 'bytes32',
      name: 'recipientRandHash',
      type: 'bytes32'
    }, {
      internalType: 'bytes',
      name: 'auxData',
      type: 'bytes'
    }],
    internalType: 'struct MTicketBrokerCore.Ticket',
    name: '_ticket',
    type: 'tuple'
  }, {
    internalType: 'bytes',
    name: '_sig',
    type: 'bytes'
  }, {
    internalType: 'uint256',
    name: '_recipientRand',
    type: 'uint256'
  }],
  name: 'redeemWinningTicket',
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
}, {
  constant: true,
  inputs: [],
  name: 'controller',
  outputs: [{
    internalType: 'contract IController',
    name: '',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'view',
  type: 'function'
}, {
  inputs: [{
    internalType: 'address',
    name: '_controller',
    type: 'address'
  }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'DepositFunded',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'recipient',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'faceValue',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'winProb',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'senderNonce',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'recipientRand',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'bytes',
    name: 'auxData',
    type: 'bytes'
  }],
  name: 'WinningTicketRedeemed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }, {
    indexed: true,
    internalType: 'address',
    name: 'recipient',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'WinningTicketTransfer',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'startRound',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'endRound',
    type: 'uint256'
  }],
  name: 'Unlock',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }],
  name: 'UnlockCancelled',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'sender',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'deposit',
    type: 'uint256'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'reserve',
    type: 'uint256'
  }],
  name: 'Withdrawal',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'reserveHolder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'ReserveFunded',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: 'address',
    name: 'reserveHolder',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'address',
    name: 'claimant',
    type: 'address'
  }, {
    indexed: false,
    internalType: 'uint256',
    name: 'amount',
    type: 'uint256'
  }],
  name: 'ReserveClaimed',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'address',
    name: 'controller',
    type: 'address'
  }],
  name: 'SetController',
  type: 'event'
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: 'string',
    name: 'param',
    type: 'string'
  }],
  name: 'ParameterUpdate',
  type: 'event'
}];

const testnetChainId = {
  rinkeby: 4,
  arbitrumRinkeby: 421_611
  // goerli: 5,
  // arbitrumGoerli: 421_613,
};

const mainnetChainId = {
  mainnet: 1,
  arbitrum: 42_161
};
const allChainId = {
  ...mainnetChainId,
  ...testnetChainId
};
const arbitrumOneAddress = {
  chainId: allChainId.arbitrum,
  BondingManager: '0x35Bcf3c30594191d53231E4FF333E8A770453e40',
  Controller: '0xD8E8328501E9645d16Cf49539efC04f734606ee4',
  L2LPTDataCache: '0xd78b6bD09cd28A83cFb21aFa0DA95c685A6bb0B1',
  L2LPTGateway: '0x6D2457a4ad276000A615295f7A80F79E48CcD318',
  L2Migrator: '0x148D5b6B4df9530c7C76A810bd1Cdf69EC4c2085',
  LivepeerToken: '0x289ba1701C2F088cf0faf8B3705246331cB8A839',
  MerkleSnapshot: '0x10736ffaCe687658F88a46D042631d182C7757f7',
  Minter: '0xc20DE37170B45774e6CD3d2304017fc962f27252',
  PollCreator: '0x8bb50806D60c492c0004DAD5D9627DAA2d9732E6',
  RoundsManager: '0xdd6f56DcC28D3F5f27084381fE8Df634985cc39f',
  ServiceRegistry: '0xC92d3A360b8f9e083bA64DE15d95Cf8180897431',
  TicketBroker: '0xa8bB618B1520E284046F3dFc448851A1Ff26e41B'
};
const mainnetAddress = {
  chainId: allChainId.mainnet,
  BondingManager: '0x511bc4556d823ae99630ae8de28b9b80df90ea2e',
  BridgeMinter: '0x8dDDB96CF36AC8860f1DE5C7c4698fd499FAB405',
  Controller: '0xf96d54e490317c557a967abfa5d6e33006be69b3',
  L1Escrow: '0x6A23F4940BD5BA117Da261f98aae51A8BFfa210A',
  L1LPTDataCache: '0x1d24838b35A9c138Ac157A852e19e948aD6323D7',
  L1LPTGateway: '0x6142f1C8bBF02E6A6bd074E8d564c9A5420a0676',
  L1Migrator: '0x21146B872D3A95d2cF9afeD03eE5a783DaE9A89A',
  LivepeerToken: '0x58b6a8a3302369daec383334672404ee733ab239',
  MerkleSnapshot: '0x24ebEd82c681f435E944BEEbFAEEAaE443D08438',
  Minter: '0x505F8c2ee81f1C6fa0D88e918eF0491222E05818',
  PollCreator: '0xBf824EDb6b94D9B52d972d5B25bCc19b4e6E3F3C',
  RoundsManager: '0x3984fc4ceeef1739135476f625d36d6c35c40dc3',
  ServiceRegistry: '0x406a112f3218b988c66778fd72fc8467f2601366',
  TicketBroker: '0x5b1ce829384eebfa30286f12d1e7a695ca45f5d2'
};
const arbitrumRinkebyAddress = {
  chainId: allChainId.arbitrumRinkeby,
  BondingManager: '0xe42229d764F673EB3FB8B9a56016C2a4DA45ffd7',
  Controller: '0x9ceC649179e2C7Ab91688271bcD09fb707b3E574',
  L2LPTDataCache: '0xd348394B6Fa2F698eC6A26352390663047735388',
  L2LPTGateway: '0x7e0ba3791B23D0D577Cf8D09C4FDd5821222208C',
  L2Migrator: '0xe2f931931B8E04a01c99a2DeBA44A9FF782F688a',
  LivepeerToken: '0x743b8469e5f54cD765F1954604cD4dfA67b64bF6',
  LivepeerTokenFaucet: '0xb59253931a679D506F6DC5d58F0D680d9c708e26',
  MerkleSnapshot: '0x4756766C61e0755db5963Ab3505280Ddf1B36cD8',
  Minter: '0xE5bE54705D41DAaA33A043aa51dE472ED637C3d9',
  PollCreator: '0x7e3305D48489e43B7fBf318D575D5dF654EE175c',
  RoundsManager: '0x3BEc08BA9D8A5b44F5C5E38F654b3efE73555d58',
  ServiceRegistry: '0x22BEc4A040f9F3491F510E7BfbbbBEf347dbb8bf',
  TicketBroker: '0xD218f6eA99907C2EDB889A151DF326aCd0F70D88'
};
const rinkebyAddress = {
  chainId: allChainId.rinkeby,
  BondingManager: '0xC40df4db2f99e7e235780A93B192F1a934f0c45b',
  BridgeMinter: '0x527416c2AE642e3e1b24C1d10816551183885BBA',
  Controller: '0x9a9827455911a858E55f07911904fACC0D66027E',
  L1Escrow: '0x192683D5Cb514da2081C543f6887EeaFD76EC64a',
  L1LPTDataCache: '0xD218f6eA99907C2EDB889A151DF326aCd0F70D88',
  L1LPTGateway: '0x831C51Cd8A38C3E42D98Acd77F06BF537D29800e',
  L1Migrator: '0x4756766C61e0755db5963Ab3505280Ddf1B36cD8',
  LivepeerToken: '0xEf5F154eb0261CB0331a28BC0fB60CA73E716617',
  LivepeerTokenFaucet: '0xdeD94096FcB94CC44862E8c84a0cF8aa2e8aE8dA',
  MerkleSnapshot: '0xC83978D78D2B089253f4FF9f1fE3768a6ca36578',
  Minter: '0x187E962A5a1CD2cE2D133e80182A82f0eBd29Ef5',
  PollCreator: '0x6749dFa7990Aa27E0B82dCD735C8100BC711AeE7',
  RoundsManager: '0x6c2A6B5cFDB30DAC34BD54af06611267e66fB07F',
  ServiceRegistry: '0xE9C2d88ffcCe434000aFAc366Db840b8E55459E5',
  TicketBroker: '0x242f1361CCdaAe8CCdf8539DE183Cb518856254f'
};

export { ArbRetryableTxABI, BondingManagerABI, ControllerABI, InboxABI, L1BondingManagerABI, L1MigratorABI, L2LPTGatewayABI, L2MigratorABI, LivepeerTokenABI, LivepeerTokenFaucetABI, MerkleSnapshotABI, MinterABI, NodeInterfaceABI, PollABI, PollCreatorABI, RoundsManagerABI, ServiceRegistryABI, TicketBrokerABI, allChainId, arbitrumOneAddress, arbitrumRinkebyAddress, mainnetAddress, mainnetChainId, rinkebyAddress, testnetChainId };
