import { g as getLivepeerProvider } from './getStream-fd5ec1b5.esm.js';
import { g as getClient } from './client-8a4dc167.esm.js';
import { a as defaultTranscodingProfiles } from './provider-a18dabb6.esm.js';

function watchLivepeerProvider(callback) {
  const client = getClient();
  const handleChange = async () => callback(getLivepeerProvider());
  const unsubscribe = client.subscribe(({
    provider
  }) => provider, handleChange);
  return unsubscribe;
}

function createAsset(args) {
  const provider = getLivepeerProvider();
  return provider.createAsset(args);
}

function getAsset(args) {
  const provider = getLivepeerProvider();
  return provider.getAsset(args);
}

function updateAsset(args) {
  const provider = getLivepeerProvider();
  return provider.updateAsset(args);
}

function getAssetMetrics(args) {
  const provider = getLivepeerProvider();
  return provider.getAssetMetrics(args);
}

function getPlaybackInfo(args) {
  const provider = getLivepeerProvider();
  return provider.getPlaybackInfo(args);
}

function createClip(args) {
  const provider = getLivepeerProvider();
  return provider.createClip(args);
}

function createStream(args) {
  const provider = getLivepeerProvider();
  return provider.createStream({
    ...args,
    profiles: args?.profiles ?? defaultTranscodingProfiles
  });
}

function getStreamSession(args) {
  const provider = getLivepeerProvider();
  return provider.getStreamSession(args);
}

function getStreamSessions(args) {
  const provider = getLivepeerProvider();
  return provider.getStreamSessions(args);
}

function updateStream(args) {
  const provider = getLivepeerProvider();
  return provider.updateStream(args);
}

export { createClip as a, createStream as b, createAsset as c, getAssetMetrics as d, getPlaybackInfo as e, getStreamSession as f, getAsset as g, getStreamSessions as h, updateStream as i, updateAsset as u, watchLivepeerProvider as w };
