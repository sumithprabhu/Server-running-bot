interface BaseStorage {
    getItem: (name: string) => string | null | Promise<string | null>;
    setItem: (name: string, value: string) => void | Promise<void>;
    removeItem: (name: string) => void | Promise<void>;
}
export type ClientStorage = {
    getItem: <T>(key: string, defaultState?: T | null) => Promise<T | null>;
    setItem: <T>(key: string, value: T | null) => Promise<void>;
    removeItem: (key: string) => Promise<void>;
};
export declare const noopStorage: BaseStorage;
export declare function createStorage({ storage, key: prefix, }: {
    storage?: BaseStorage;
    key?: string;
}): ClientStorage;
export {};
