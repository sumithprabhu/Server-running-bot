import { MimeType } from './mime';
type AudioExtension = 'm4a' | 'mp4a' | 'mpga' | 'mp2' | 'mp2a' | 'mp3' | 'm2a' | 'm3a' | 'wav' | 'weba' | 'aac' | 'oga' | 'spx';
type VideoExtension = 'mp4' | 'ogv' | 'webm' | 'mov' | 'm4v' | 'avi' | 'm3u8';
type HlsExtension = 'm3u8';
type OptionalQueryParams = `?${string}` | '';
type BaseSrc = {
    type: 'audio' | 'video' | 'hls' | 'webrtc';
    src: string;
    mime: MimeType | null;
};
export interface AudioSrc extends BaseSrc {
    type: 'audio';
    src: `${string}${AudioExtension}${OptionalQueryParams}`;
}
export interface VideoSrc extends BaseSrc {
    type: 'video';
    src: `${string}${VideoExtension}${OptionalQueryParams}`;
}
export interface Base64Src extends BaseSrc {
    type: 'video';
    src: `${string}`;
}
export interface HlsSrc extends BaseSrc {
    type: 'hls';
    src: `${string}${HlsExtension}${OptionalQueryParams}`;
}
export interface WebRTCSrc extends BaseSrc {
    type: 'webrtc';
    src: `${string}${OptionalQueryParams}`;
}
export type Src = AudioSrc | HlsSrc | VideoSrc | Base64Src | WebRTCSrc;
export declare const getMediaSourceType: (src: string) => HlsSrc | AudioSrc | VideoSrc | Base64Src | WebRTCSrc | null;
export {};
