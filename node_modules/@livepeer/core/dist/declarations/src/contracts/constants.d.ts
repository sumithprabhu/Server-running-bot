import { Address } from '../types';
export declare const l1ChainId: {
    readonly rinkeby: 4;
    readonly mainnet: 1;
};
export declare const l2ChainId: {
    readonly arbitrum: 42161;
    readonly arbitrumRinkeby: 421611;
};
export declare const testnetChainId: {
    readonly rinkeby: 4;
    readonly arbitrumRinkeby: 421611;
};
export declare const mainnetChainId: {
    readonly mainnet: 1;
    readonly arbitrum: 42161;
};
export declare const allChainId: {
    readonly rinkeby: 4;
    readonly arbitrumRinkeby: 421611;
    readonly mainnet: 1;
    readonly arbitrum: 42161;
};
export type TestnetLivepeerChain = keyof typeof testnetChainId;
export type TestnetLivepeerChainId = typeof testnetChainId[TestnetLivepeerChain];
export type MainnetLivepeerChain = keyof typeof mainnetChainId;
export type MainnetLivepeerChainId = typeof mainnetChainId[MainnetLivepeerChain];
export type L1LivepeerChain = keyof typeof l1ChainId;
export type L1LivepeerChainId = typeof l1ChainId[L1LivepeerChain];
export type L2LivepeerChain = keyof typeof l2ChainId;
export type L2LivepeerChainId = typeof l2ChainId[L2LivepeerChain];
export type LivepeerChain = keyof typeof allChainId;
export type LivepeerChainId = typeof allChainId[LivepeerChain];
export type LivepeerAddressMetadata = {
    chainId: LivepeerChainId;
};
export type LivepeerAddress = {
    BondingManager: Address;
    Controller: Address;
    LivepeerToken: Address;
    Minter: Address;
    PollCreator: Address;
    RoundsManager: Address;
    ServiceRegistry: Address;
    TicketBroker: Address;
};
type TestnetAddress = {
    chainId: TestnetLivepeerChainId;
    LivepeerTokenFaucet: Address;
} | {
    chainId: MainnetLivepeerChainId;
};
export type L2Address = LivepeerAddress & LivepeerAddressMetadata & TestnetAddress & {
    chainId: L2LivepeerChainId;
    L2LPTDataCache: Address;
    L2LPTGateway: Address;
    L2Migrator: Address;
    MerkleSnapshot: Address;
};
export type L1Address = LivepeerAddress & LivepeerAddressMetadata & TestnetAddress & {
    chainId: L1LivepeerChainId;
    BridgeMinter: Address;
    L1Escrow: Address;
    L1LPTDataCache: Address;
    L1LPTGateway: Address;
    L1Migrator: Address;
    MerkleSnapshot: Address;
};
export declare const arbitrumOneAddress: L2Address;
export declare const mainnetAddress: L1Address;
export declare const arbitrumRinkebyAddress: L2Address;
export declare const rinkebyAddress: L1Address;
export {};
