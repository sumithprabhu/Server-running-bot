import { Mutate, StoreApi } from 'zustand/vanilla';
import { ClientStorage } from '../storage';
import { LivepeerProvider } from '../types';
export type ClientConfig<TLivepeerProvider extends LivepeerProvider = LivepeerProvider> = {
    /** Interface(s) for connecting to provider(s) */
    provider: () => TLivepeerProvider;
    /**
     * Custom storage for data persistence
     * @default window.localStorage
     */
    storage?: ClientStorage;
};
export type State<TLivepeerProvider extends LivepeerProvider = LivepeerProvider> = {
    error?: Error;
    provider: TLivepeerProvider;
};
export declare class Client<TLivepeerProvider extends LivepeerProvider = LivepeerProvider> {
    config: Partial<ClientConfig<TLivepeerProvider>>;
    storage: ClientStorage;
    store: Mutate<StoreApi<State<TLivepeerProvider>>, [
        [
            'zustand/subscribeWithSelector',
            never
        ],
        [
            'zustand/persist',
            Partial<State<TLivepeerProvider>>
        ]
    ]>;
    constructor({ provider, storage, }: ClientConfig<TLivepeerProvider>);
    get error(): Error | undefined;
    get provider(): TLivepeerProvider;
    get subscribe(): {
        (listener: (selectedState: State<TLivepeerProvider>, previousSelectedState: State<TLivepeerProvider>) => void): () => void;
        <U>(selector: (state: State<TLivepeerProvider>) => U, listener: (selectedState: U, previousSelectedState: U) => void, options?: {
            equalityFn?: ((a: U, b: U) => boolean) | undefined;
            fireImmediately?: boolean | undefined;
        } | undefined): () => void;
    };
    setState(updater: State<TLivepeerProvider> | ((state: State<TLivepeerProvider>) => State<TLivepeerProvider>)): void;
    clearState(): void;
    destroy(): Promise<void>;
}
export declare let client: Client<LivepeerProvider> | null;
export declare function createClient<TLivepeerProvider extends LivepeerProvider = LivepeerProvider>(config: ClientConfig<TLivepeerProvider>): Client<TLivepeerProvider>;
export declare function getClient<TLivepeerProvider extends LivepeerProvider = LivepeerProvider>(): Client<TLivepeerProvider>;
export declare function clearClient(): void;
