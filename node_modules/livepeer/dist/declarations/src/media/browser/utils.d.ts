import { Src } from '@livepeer/core/media';
export declare const isClient: () => boolean;
export declare const ua: () => string;
export declare const isIos: () => boolean;
export declare const isAndroid: () => boolean;
export declare const isMobile: () => boolean;
export declare const isIphone: () => boolean;
export declare const isFirefox: () => boolean;
export declare const isChrome: () => boolean;
export declare const isSafari: () => boolean;
/**
 * To detect autoplay, we create a video element and call play on it, if it is `paused` after
 * a `play()` call, autoplay is supported. Although this unintuitive, it works across browsers
 * and is currently the lightest way to detect autoplay without using a data source.
 *
 * @see {@link https://github.com/ampproject/amphtml/blob/9bc8756536956780e249d895f3e1001acdee0bc0/src/utils/video.js#L25}
 */
export declare const canAutoplay: (muted?: boolean, playsinline?: boolean) => Promise<boolean>;
/**
 * Checks if the native HTML5 video player can play the mime type.
 */
export declare const canPlayMediaNatively: (src: Src) => boolean;
