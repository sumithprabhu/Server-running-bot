import { IPGPHelper } from '../chat/helpers';
import Constants, { ENV } from '../constants';
import { SignerType, ProgressHookType, IUser } from '../types';
export type CreateUserProps = {
    env?: ENV;
    account?: string;
    signer?: SignerType;
    version?: typeof Constants.ENC_TYPE_V1 | typeof Constants.ENC_TYPE_V3;
    additionalMeta?: {
        NFTPGP_V1?: {
            password: string;
        };
    };
    progressHook?: (progress: ProgressHookType) => void;
    origin?: string | null;
};
interface ICreateUser extends IUser {
    decryptedPrivateKey?: string;
}
export declare const create: (options: CreateUserProps) => Promise<ICreateUser>;
export declare const createUserCore: (options: CreateUserProps, pgpHelper: IPGPHelper) => Promise<ICreateUser>;
export {};
