"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decryptAuth = void 0;
const tslib_1 = require("tslib");
const constants_1 = require("../constants");
const helpers_1 = require("../helpers");
const progressHook_1 = require("../progressHook");
/**
 *
 * @returns Decrypted Push Profile Password
 */
const decryptAuth = (options) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const { account, signer, env = constants_1.default.ENV.PROD, additionalMeta, progressHook, } = options || {};
    try {
        if (!(0, helpers_1.isValidCAIP10NFTAddress)(account)) {
            return null;
        }
        // Report Progress
        progressHook === null || progressHook === void 0 ? void 0 : progressHook(progressHook_1.default['PUSH-DECRYPT-AUTH-01']);
        const password = yield (0, helpers_1.decryptPGPKey)({
            encryptedPGPPrivateKey: (_a = additionalMeta === null || additionalMeta === void 0 ? void 0 : additionalMeta.NFTPGP_V1) === null || _a === void 0 ? void 0 : _a.encryptedPassword,
            signer,
            account,
            env,
        });
        // Report Progress
        progressHook === null || progressHook === void 0 ? void 0 : progressHook(progressHook_1.default['PUSH-DECRYPT-AUTH-02']);
        return password;
    }
    catch (err) {
        // Report Progress
        progressHook === null || progressHook === void 0 ? void 0 : progressHook(progressHook_1.default['PUSH-ERROR-00'](exports.decryptAuth.name, err));
        throw Error(`[Push SDK] - API  - Error - API ${exports.decryptAuth.name} -: ${err}`);
    }
});
exports.decryptAuth = decryptAuth;
//# sourceMappingURL=decryptAuth.js.map