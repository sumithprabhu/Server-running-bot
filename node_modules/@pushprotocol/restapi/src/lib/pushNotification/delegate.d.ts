import { ENV } from '../constants';
import { SignerType } from '../types';
import { ChannelInfoOptions } from './PushNotificationTypes';
import { PushNotificationBaseClass } from './pushNotificationBase';
export declare class Delegate extends PushNotificationBaseClass {
    constructor(signer?: SignerType, env?: ENV, account?: string);
    /**
     * @description - Get delegates of a channell
     * @param {string} [options.channel] - channel in caip. defaults to account from signer with eth caip
     * @returns array of delegates
     */
    get: (options?: ChannelInfoOptions) => Promise<any>;
    /**
     * @description adds a delegate
     * @param {string} delegate - delegate address in caip to be added
     * @returns the transaction hash if the transaction is successfull
     */
    add: (delegate: string) => Promise<{
        transactionHash: any;
    }>;
    /**
     * @description removes a delegate
     * @param {string} delegate - caip address of the delegate to be removed
     * @returns the transaction hash if the transaction is successfull
     */
    remove: (delegate: string) => Promise<{
        transactionHash: any;
    }>;
}
