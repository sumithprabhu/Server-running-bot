import { ENCRYPTION_TYPE, ENV } from '../constants';
import { SignerType, ProgressHookType } from '../types';
export declare class Encryption {
    private account;
    private env;
    private decryptedPgpPvtKey?;
    private pgpPublicKey?;
    private signer?;
    private progressHook?;
    private userInstance;
    constructor(account: string, env: ENV, decryptedPgpPvtKey?: string | undefined, pgpPublicKey?: string | undefined, signer?: SignerType | undefined, progressHook?: ((progress: ProgressHookType) => void) | undefined);
    info(): Promise<{
        decryptedPassword?: string | undefined;
        decryptedPgpPrivateKey: string | undefined;
        pgpPublicKey: string | undefined;
    }>;
    update(updatedEncryptionType: ENCRYPTION_TYPE, options?: {
        versionMeta?: {
            NFTPGP_V1?: {
                password: string;
            };
        };
    }): Promise<import("../types").IUser>;
}
