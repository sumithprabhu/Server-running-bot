"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const chat_1 = require("../../chat");
const constants_1 = require("../../constants");
const Space_1 = require("../Space");
const getLiveSpaceData = ({ localAddress, spaceId, pgpPrivateKey, env, }) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    const threadhash = (yield (0, chat_1.conversationHash)({
        account: localAddress,
        conversationId: spaceId,
        env,
    })).threadHash;
    let liveSpaceData = Space_1.initLiveSpaceData;
    // fetch the message history to retrieve the latest meta message
    // rn we only fetch the latest 10 messages
    const messages = yield (0, chat_1.history)({
        threadhash,
        account: localAddress,
        pgpPrivateKey,
        toDecrypt: true,
        env,
    });
    let latestMetaMessage = null;
    for (const message of messages) {
        if (message.messageType === constants_1.MessageType.META &&
            typeof message.messageObj === 'object' &&
            message.messageObj !== null) {
            latestMetaMessage = message;
            break;
        }
    }
    if (latestMetaMessage !== null &&
        typeof latestMetaMessage.messageObj === 'object' &&
        latestMetaMessage.messageObj !== null) {
        // found the latest meta message
        liveSpaceData = (_b = (_a = latestMetaMessage.messageObj) === null || _a === void 0 ? void 0 : _a.info) === null || _b === void 0 ? void 0 : _b.arbitrary;
    }
    return liveSpaceData;
});
exports.default = getLiveSpaceData;
//# sourceMappingURL=getLiveSpaceData.js.map