"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.connectInvitee = void 0;
const tslib_1 = require("tslib");
const immer_1 = require("immer");
const addSpeakers_1 = require("./addSpeakers");
function connectInvitee(options) {
    var _a;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { signalData, inviteeAddress } = options || {};
        // check for invalid invite
        if (!((_a = this.spaceSpecificData) === null || _a === void 0 ? void 0 : _a.inviteeDetails) ||
            !Object.keys(this.spaceSpecificData.inviteeDetails).includes(inviteeAddress)) {
            return Promise.resolve();
        }
        const role = this.spaceSpecificData.inviteeDetails[inviteeAddress];
        this.setSpaceSpecificData((oldData) => {
            return (0, immer_1.produce)(oldData, (draft) => {
                if (draft.inviteeDetails)
                    delete draft.inviteeDetails[inviteeAddress];
            });
        });
        yield (0, addSpeakers_1.addSpeakers)({
            spaceId: this.spaceSpecificData.spaceId,
            signer: this.signer,
            pgpPrivateKey: this.pgpPrivateKey,
            speakers: [inviteeAddress],
        });
        // complete the webRTC connection
        this.connect({ signalData, peerAddress: inviteeAddress });
    });
}
exports.connectInvitee = connectInvitee;
//# sourceMappingURL=connectInvitee.js.map