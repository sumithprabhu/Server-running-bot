"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rejectPromotionRequest = void 0;
const tslib_1 = require("tslib");
const immer_1 = require("immer");
const sendLiveSpaceData_1 = require("./helpers/sendLiveSpaceData");
const messageTypes_1 = require("../types/messageTypes");
const helpers_1 = require("../helpers");
function rejectPromotionRequest(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { promoteeAddress } = options || {};
        // reject the promotion request
        this.disconnect({
            peerAddress: (0, helpers_1.pCAIP10ToWallet)(promoteeAddress),
        });
        // update live space info
        const updatedLiveSpaceData = (0, immer_1.produce)(this.spaceSpecificData.liveSpaceData, (draft) => {
            const listnerIndex = this.spaceSpecificData.liveSpaceData.listeners.findIndex((listener) => listener.address === (0, helpers_1.pCAIP10ToWallet)(promoteeAddress));
            if (listnerIndex > -1)
                draft.listeners[listnerIndex].handRaised = false;
        });
        this.setSpaceSpecificData(() => (Object.assign(Object.assign({}, this.spaceSpecificData), { liveSpaceData: updatedLiveSpaceData })));
        yield (0, sendLiveSpaceData_1.default)({
            liveSpaceData: updatedLiveSpaceData,
            pgpPrivateKey: this.pgpPrivateKey,
            env: this.env,
            spaceId: this.spaceSpecificData.spaceId,
            signer: this.signer,
            action: messageTypes_1.CHAT.META.GROUP.USER.INTERACTION, // TODO: Add a reject request type
        });
    });
}
exports.rejectPromotionRequest = rejectPromotionRequest;
//# sourceMappingURL=rejectPromotionRequest.js.map