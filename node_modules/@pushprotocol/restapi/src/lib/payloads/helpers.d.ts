import { ENV } from '../constants';
import { ISendNotificationInputOptions, INotificationPayload, walletType, VideoNotificationRules } from '../types';
import { IDENTITY_TYPE, NOTIFICATION_TYPE } from './constants';
export declare function getUUID(): string;
/**
 * This function will map the Input options passed to the SDK to the "payload" structure
 * needed by the API input
 *
 * We need notificationPayload only for identityType
 *  - DIRECT_PAYLOAD
 *  - MINIMAL
 */
export declare function getPayloadForAPIInput(inputOptions: ISendNotificationInputOptions, recipients: any): INotificationPayload | null;
/**
 * This function returns the recipient format accepted by the API for different notification types
 */
export declare function getRecipients({ env, notificationType, channel, recipients, secretType, }: {
    env: ENV;
    notificationType: NOTIFICATION_TYPE;
    channel: string;
    recipients?: string | string[];
    secretType?: string;
}): Promise<any>;
export declare function getRecipientFieldForAPIPayload({ env, notificationType, recipients, channel, }: {
    env: ENV;
    notificationType: NOTIFICATION_TYPE;
    recipients: string | string[];
    channel: string;
}): Promise<string>;
export declare function getVerificationProof({ senderType, signer, chainId, notificationType, identityType, verifyingContract, payload, ipfsHash, graph, uuid, chatId, wallet, pgpPrivateKey, env, rules }: {
    senderType: 0 | 1;
    signer: any;
    chainId: number;
    notificationType: NOTIFICATION_TYPE;
    identityType: IDENTITY_TYPE;
    verifyingContract: string;
    payload: any;
    ipfsHash?: string;
    graph?: any;
    uuid: string;
    chatId?: string;
    wallet?: walletType;
    pgpPrivateKey?: string;
    env?: ENV;
    rules?: VideoNotificationRules;
}): Promise<string>;
export declare function getPayloadIdentity({ identityType, payload, notificationType, ipfsHash, graph, }: {
    identityType: IDENTITY_TYPE;
    payload: any;
    notificationType?: NOTIFICATION_TYPE;
    ipfsHash?: string;
    graph?: any;
}): string | null;
export declare function getSource(chainId: number, identityType: IDENTITY_TYPE, senderType: 0 | 1): string;
export declare function getCAIPFormat(chainId: number, address: string): string;
