"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTypeInformationV2 = exports.getTypeInformation = exports.getSubscriptionMessageV2 = exports.getSubscriptionMessage = exports.getDomainInformation = void 0;
const getDomainInformation = (chainId, verifyingContract) => {
    return {
        name: 'EPNS COMM V1',
        chainId,
        verifyingContract,
    };
};
exports.getDomainInformation = getDomainInformation;
const getSubscriptionMessage = (channel, userAddress, action) => {
    const actionTypeKey = action === 'Unsubscribe' ? 'unsubscriber' : 'subscriber';
    return {
        channel,
        [actionTypeKey]: userAddress,
        action: action,
    };
};
exports.getSubscriptionMessage = getSubscriptionMessage;
const getSubscriptionMessageV2 = (channel, userAddress, action, userSetting) => {
    const actionTypeKey = action === 'Unsubscribe' ? 'unsubscriber' : 'subscriber';
    if (action == 'Subscribe') {
        return JSON.stringify({
            channel,
            [actionTypeKey]: userAddress,
            action: action,
            userSetting: userSetting !== null && userSetting !== void 0 ? userSetting : '',
        }, null, 4);
    }
    else {
        return JSON.stringify({
            channel,
            [actionTypeKey]: userAddress,
            action: action,
        }, null, 4);
    }
};
exports.getSubscriptionMessageV2 = getSubscriptionMessageV2;
const getTypeInformation = (action) => {
    if (action === 'Subscribe') {
        return {
            Subscribe: [
                { name: 'channel', type: 'address' },
                { name: 'subscriber', type: 'address' },
                { name: 'action', type: 'string' },
            ],
        };
    }
    return {
        Unsubscribe: [
            { name: 'channel', type: 'address' },
            { name: 'unsubscriber', type: 'address' },
            { name: 'action', type: 'string' },
        ],
    };
};
exports.getTypeInformation = getTypeInformation;
const getTypeInformationV2 = () => {
    return {
        Data: [{ name: 'data', type: 'string' }],
    };
};
exports.getTypeInformationV2 = getTypeInformationV2;
//# sourceMappingURL=signature.helpers.js.map